def product(a, b, c):
  result = a * b * c
  return result
  
  
def evenoddneither(n):
  if (n%2 == 0):
    print (n, "is even")
  elif (n%2 == 1):
    print (n, "is odd")
  else:
    print (n, "is neither")

def states():
  MidAtlantic = ['NY', 'NJ', 'PA', 'MD', 'DE']
  MidAtlantic[1] = 'NJ'
  MidAtlantic[-1] = 'DE'
  len(MidAtlantic) = 5
  
  for state in MidAtlantic:
    print(state, end='  ')    # prints the five states on same line

def threesmultiples():
  multiples = [n*3 for n in range(10)]
  multiples   # yields multiples of three from 3 to 27, inclusive
  
def dictionaryexample():
  NAFTA{'Canada': 1, 'USA': 2, 'Mexico': 3} 
  NAFTA['Canada'] # yields 1
  NAFTA['USA'] # yields 2
  NAFTA['Mexico'] # yields 3
  
def median(intlist):
    if len(intlist) == 0:
         return None
    else:
        sortlist = sorted(intlist)
        if (len(intlist) % 2) == 1:   #tests to see is list is odd
            index = int((len(intlist)-1)/2) # finds middle number
            return sortlist[index] 
        else:
            index1 = int((len(intlist)/2)-1) # finds smaller of two middle numbers
            result1 = sortlist[index1] 
            index2 = int((len(intlist)/2)) # finds larger of two middle numbers
            result2 = sortlist[index2]
            result = (result1 + result2)/2  # determines average of two middle numbers
            return result 

def estimate_pi_python(numsamples):
    i = 0
    numincircle = 0
    while (i < numsamples):    
        x = random.random() - 0.5
        y = random.random() - 0.5
        if (math.sqrt(x**2 + y**2) <= 0.5):
            numincircle += 1
        i += 1      
    pi = float(numincircle/numsamples) * 4
    return pi
